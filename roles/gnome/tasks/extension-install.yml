---
- name: Gnome | Extension | Install | Fail if extension id not present
  ansible.builtin.fail:
    msg: pv_gnome_extension_id or pv_gnome_extension_name is not present
  when: pv_gnome_extension_id is undefined or pv_gnome_extension_id | length < 1 or pv_gnome_extension_name is undefined or pv_gnome_extension_name | length < 1

- name: Gnome | Extension | Install | Get Extension Info | {{ pv_gnome_extension_name }}
  ansible.builtin.uri:
    url: "https://extensions.gnome.org/extension-info/?pk={{ pv_gnome_extension_id }}&shell_version={{ pv_gnome_gnome_shell_version }}"
    method: GET
    return_content: true
    status_code: 200
  register: pv_gnome_extension_info

- name: Gnome | Extension | Install | Set Extension Info | {{ pv_gnome_extension_name }}
  ansible.builtin.set_fact:
    pv_gnome_extension_uuid: "{{ pv_gnome_extension_info.json.uuid }}"
    pv_gnome_extension_download_url: "{{ pv_gnome_extension_info.json.download_url }}"
    pv_gnome_extension_version: "{{ pv_gnome_extension_info.json.version }}"

- name: Gnome | Extension | Install | Set extension directory | {{ pv_gnome_extension_name }}
  ansible.builtin.set_fact:
    pv_gnome_extension_user_dir: "{{ gnome_rv_user_share_dir }}/gnome-shell/extensions/{{ pv_gnome_extension_uuid }}"

- name: Gnome | Extension | Install | Check for directory | {{ pv_gnome_extension_name }}
  ansible.builtin.stat:
    path: "{{ pv_gnome_extension_user_dir }}"
  register: pv_gnome_extension_dir_stat

- name: Gnome | Extension | Install | New Install | {{ pv_gnome_extension_name }}
  when: not pv_gnome_extension_dir_stat.stat.exists
  block:
    - name: Gnome | Extension | Install | New Install | Set Download location | {{ pv_gnome_extension_name }}
      ansible.builtin.set_fact:
        pv_gnome_extension_download_path: "{{ gnome_rv_user_cache_tmp_dir }}/{{ pv_gnome_extension_uuid }}-{{ pv_gnome_extension_version }}.zip"

    - name: Gnome | Extension | Install | New Install | Check for existing archive | {{ pv_gnome_extension_name }}
      ansible.builtin.stat:
        path: "{{ pv_gnome_extension_download_path }}"
      register: pv_gnome_extension_download_path_stat

    - name: Gnome | Extension | Install | New Install | New Download | {{ pv_gnome_extension_name }}
      when: not pv_gnome_extension_download_path_stat.stat.exists
      block:
        - name: Gnome | Extension | Install | New Install | New Download | Create Directiry | {{ pv_gnome_extension_name }}
          ansible.builtin.file:
            path: "{{ pv_gnome_extension_download_path | dirname }}"
            state: directory
            mode: "0700"

        - name: Gnome | Extension | Install | New Install | New Download | Download archive | {{ pv_gnome_extension_name }}
          when: not pv_gnome_extension_download_path_stat.stat.exists
          ansible.builtin.get_url:
            url: "https://extensions.gnome.org{{ pv_gnome_extension_download_url }}"
            dest: "{{ pv_gnome_extension_download_path }}"
            mode: "0700"

        - name: Gnome | Extension | Install | New Install | New Download | Create directory | {{ pv_gnome_extension_name }}
          ansible.builtin.file:
            path: "{{ pv_gnome_extension_user_dir }}"
            state: directory
            mode: "0700"

        - name: Gnome | Extension | Install | New Install | New Download | Unarchive | {{ pv_gnome_extension_name }}
          ansible.builtin.unarchive:
            src: "{{ pv_gnome_extension_download_path }}"
            dest: "{{ pv_gnome_extension_user_dir }}"
            remote_src: true
